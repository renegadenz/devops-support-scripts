import os
import pandas as pd
from ipwhois import IPWhois

# Function to get WHOIS organization info for an IP
def get_org_from_ip(ip):
    try:
        obj = IPWhois(ip)
        result = obj.lookup_rdap()
        return result.get("network", {}).get("name", "Unknown")
    except Exception as e:
        return f"Error: {e}"

# Auto-detect CSV in the directory (or modify to specify manually)
directory = os.getcwd()  # Change this if CloudWatch logs are in a different folder
csv_files = [f for f in os.listdir(directory) if f.endswith(".csv")]

if not csv_files:
    raise FileNotFoundError("No CSV files found in the directory.")

# Use the first CSV file found (modify for user input selection if needed)
csv_file = os.path.join(directory, csv_files[0])
print(f"Processing CSV file: {csv_file}")

# Load the CSV file
df = pd.read_csv(csv_file)

# Assuming the source IP column is named 'srcaddr' (Modify if needed)
source_ip_column = "srcaddr"
if source_ip_column not in df.columns:
    raise ValueError(f"The CSV file does not contain a '{source_ip_column}' column.")

# Extract unique source IPs
source_ips = df[source_ip_column].dropna().unique()

# Perform WHOIS lookups
results = [{"IP Address": ip, "Organization": get_org_from_ip(ip)} for ip in source_ips]

# Convert to DataFrame
df_results = pd.DataFrame(results)

# Define output CSV file name
output_csv = os.path.join(directory, "whois_lookup_results.csv")

# Save results to CSV
df_results.to_csv(output_csv, index=False)

print(f"WHOIS lookup results saved to: {output_csv}")
