import os
import pandas as pd
from ipwhois import IPWhois

# Get CSV file path from environment variable
csv_file = os.getenv("FLOW_LOGS_CSV")

if not csv_file:
    raise EnvironmentError("Environment variable 'FLOW_LOGS_CSV' is not set.")
if not os.path.exists(csv_file):
    raise FileNotFoundError(f"CSV file not found at: {csv_file}")

print(f"Processing CSV file: {csv_file}")

# Load the CSV file
df = pd.read_csv(csv_file)

# Assuming the source IP column is named 'srcaddr' (Modify if needed)
source_ip_column = "srcaddr"
if source_ip_column not in df.columns:
    raise ValueError(f"The CSV file does not contain a '{source_ip_column}' column.")

# Extract unique source IPs
source_ips = df[source_ip_column].dropna().unique()

# WHOIS lookup function
def get_org_from_ip(ip):
    try:
        obj = IPWhois(ip)
        result = obj.lookup_rdap()
        return result.get("network", {}).get("name", "Unknown")
    except Exception as e:
        return f"Error: {e}"

# Perform WHOIS lookups
results = [{"IP Address": ip, "Organization": get_org_from_ip(ip)} for ip in source_ips]

# Convert to DataFrame
df_results = pd.DataFrame(results)

# Define output CSV file name
output_csv = os.path.join(os.path.dirname(csv_file), "whois_lookup_results.csv")

# Save results to CSV
df_results.to_csv(output_csv, index=False)

print(f"WHOIS lookup results saved to: {output_csv}")
